<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
                    http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
            http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:datasource/datasource.properties"
                                  ignore-unresolvable="true" />

    <!-- scan the package and the sub package -->
    <context:component-scan base-package="com.ejiayou" />
    <!-- 	<context:annotation-config /> -->

    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 一、使用数据库连接池注册数据源,引入相关的配置文件 -->
    <!-- -->
    <import resource="../datasource/c3p0.xml" />

    <!-- 二、创建mybatis会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mapper/mybatis-config.xml"></property>
        <!--<property name="mapperLocations" value=""/>-->
    </bean>

    <!-- 三、创建mybatis会话template <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg> </bean> -->

    <!-- 注册接口类的bean，使得程序中可以用注解方式获取 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--<property name="annotationClass" value="org.springframework.stereotype.Repository" />-->
        <property name="basePackage" value="com.ejiayou.dao" />
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory" />-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>

    <bean name="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="txManager" />
</beans>